Langue : francais

Database
    nom de base : 1 mot
    nom de table : snake_case
    nom de champ : snake_case
    cle primaire : id
    cle etrangere : nomdetable_id

Classe
    nom de classe : PascalCase
        -Terminer par Controller ou Model
    nom de fonction : camelCase
        return result 
        throws Exception
    nom de variable/attribut : camelCase 
        porte le meme nom que sa classe si objet (en minuscule)
            avec s si list/array => pour un sans s en foreach

View 
    nom de page : kebab-case 

Autres fichiers/dossier : camelCase

-chemin image dans base : commencer par /public

Argument du constructeur des controllers :
            Flight::get('flight.base_url') 
            -> depuis routes
Argument du constructeur des models : 
            Flight::map('Model', function () {return new Model(Flight::db());}); 
            -> depuis controllers

Mettre dans $url pour index et templates de view : 
    -Flight::get('flight.base_url') 
    ->pour les assets 

liens dans view : sans /
/actionRoute et fonction du controller : meme nom 

nom dans les table = name dans les form/get de view = nom des variables dans model
    ->meme ordre que dans les tables

Depuis controller :
    -rediriger avec Flight dans un template dedie
    -envoyer data contenant au minimum : 
        -page : sans / et sans .php
        -url : $this->url 
